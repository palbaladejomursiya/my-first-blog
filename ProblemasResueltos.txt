1) Error al hacer upgrade para pip
	Solucion: comando "python -m pip install -U --force-reinstall pip"

2) Credenciales de la cuenta en PythonAnywhere.com: "https://www.pythonanywhere.com/user/palbaladejo/"
	User: palbaladejo (he usado el email @utemursiya.es)
	Pass: NefbLy6XY6PNsGH
3) Pasos y Comandos para crear un proyecto desde 0:
	1- 	django-admin.exe startproject mysite .      # mysite es el nombre del proyecto

	2-	Cambiar dentro de mysite/settings.py:
			TIME_ZONE = 'Europe/Berlin'
			LANGUAGE_CODE = 'es-es'
			STATIC_URL = '/static/'
			STATIC_ROOT = os.path.join(BASE_DIR, 'static')
			ALLOWED_HOSTS = ['127.0.0.1', ' . pythonanywhere.com']

	3-	Crear BD que viene por defecto (SQLite en este caso de ejemplo): 
			python manage.py migrate

	4- 	Iniciar el servidor: 
			python manage.py runserver		# Control + C para parar
			En el navegador nuestro localhost será: http://127.0.0.1:8000/

	5-	Crear Aplicación:
			python manage.py startapp blog		#blog es el nombre de la app de ejemplo del tutorial
			En el fichero mysite/settings.py agregar una linea a INSTALLED_APPS con el nombre de la nueva aplicacion

	6-	Crear modelo: Un modelo en Django es un tipo especial de objeto que se guarda en la base de datos
			Abre blog/models.py en el editor, borra todo, y escribe código como este:

				blog/models.py
				from django.db import models
				from django.utils import timezone

				class Post(models.Model):						# Post es el nombre del modelo (modificable)
				    author = models.ForeignKey('auth.User', on_delete=models.CASCADE)
				    title = models.CharField(max_length=200)
				    text = models.TextField()
 				   created_date = models.DateTimeField(
 				           default=timezone.now)
 				   published_date = models.DateTimeField(
  				          blank=True, null=True)

 				   def publish(self):							# publish es el nombre del método (modificable)
 				       self.published_date = timezone.now()
 				       self.save()

  				  def __str__(self):
  				      return self.title

			Documentación de Django sobre los campos de los Modelos y demás: 
				https://docs.djangoproject.com/en/2.0/ref/models/fields/#field-types

	7-	Para guardar los cambios en el modelo:
			python manage.py makemigrations blog	# OJO! Blog es el nombre del modelo
		Para aplicar los cambios en la BD:
			python manage.py migrate blog		# OJO! Blog es el nombre del modelo

	8-	Para agregar, editar y borrar los "posts" que hemos modelado, usaremos el administrador (admin) de Django.
		Abre el fichero blog/admin.py en el editor y reemplaza su contenido con esto:

			blog/admin.py
			from django.contrib import admin
			from .models import Post		#OJO NOMBRE!

			admin.site.register(Post)		#OJO NOMBRE!

		Para acceder a la parte de administración:	http://127.0.0.1:8000/admin/
	9-	Para crear supersusuarios con privilegios:	python manage.py createsuperuser
			Credenciales que he puesto:
				Username: patricia
				Email address: palbaladejo@utemursiya.es
				Password: patricia1234	
			
		Doc extra sobre Django admin:	
			https://docs.djangoproject.com/en/2.0/ref/contrib/admin/

	10-	ME HE SALTADO EL APARTADO SOBRE DESPLIEGUE





